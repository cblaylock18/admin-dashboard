/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Prevent font size inflation */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
    margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
    list-style: none;
}

/* Set core body defaults */
body {
    min-height: 100vh;
    line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
    line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
    text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

/* Make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
    font-family: inherit;
    font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
    min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
    scroll-margin-block: 5ex;
}
/* Custom CSS */

ul {
    list-style-type: none;
}

body {
    margin: 0;
}

.container {
    display: grid;
    grid-template-columns: minmax(225px, 1fr) minmax(400px, 6fr);
    grid-template-rows: 1fr 9fr;
}

.sidebar {
    grid-area: 1 / 1 / 3 / 2;
    background-color: rgb(173, 217, 253);
}

.header {
    grid-area: 1 / 2 / 2 / 3;
}

.content {
    grid-area: 2 / 2 / 3 / 3;
    background-color: rgb(183, 200, 207);
}

img {
    height: 30px;
    display: inline-block;
}

div.sidebar > ul {
    display: grid;
    grid-template-rows: 3fr repeat(5, 1fr) 3fr repeat(3, 1fr) max(50px, 25vh);
    row-gap: 1rem;
    padding-left: 0.5rem;
}

div.sidebar > ul > li {
    display: grid;
    grid-template-rows: 30px;
    grid-template-columns: 50px 1fr;
    justify-items: center;
    align-items: center;
}

li > img + p {
    margin: 0;
    padding: 0;
    justify-self: left;
}
div.sidebar > ul > li > p {
    font-size: 1.3rem;
    font-weight: bolder;
}
div.sidebar > ul > li:nth-child(1) > img {
    height: 3rem;
}

div.sidebar > ul > li:nth-child(1) > p {
    font-size: 1.8rem;
}

.header {
    display: grid;
    grid-template-rows: 1fr 2fr;
}

.search > ul {
    display: grid;
    grid-template-columns: 11fr minmax(30px, 1fr) minmax(30px, 1fr) minmax(
            125px,
            2fr
        );
    column-gap: 10px;
    padding-left: 30px;
}

.search > ul > li {
    display: grid;
    place-content: center;
}

.search > ul > li:nth-child(1) {
    justify-self: left;
}

.search > ul > li:nth-child(2) {
    justify-self: right;
}

.search > ul > li:nth-child(3) {
    justify-self: center;
}

.search > ul > li:nth-child(4) {
    justify-self: left;
}

.search-form {
    display: grid;
    grid-template-columns: minmax(30px, 1fr) clamp(100px, 45vw, 500px);
    gap: 10px;
    align-items: center;
}

.search-form > label > img {
    display: block;
}

#search-bar {
    border-radius: 30px;
    border: none;
    background-color: rgb(206, 223, 238);
    font-size: 1.4rem;
    padding: 0.3rem 15px;
}

.nav {
    display: grid;
    grid-template-columns: minmax(50px, 1fr) minmax(100px, 7fr) repeat(
            3,
            minmax(min-content, 1fr)
        );
    place-items: center;
    gap: 16px;
}

.nav > div:nth-child(2) {
    justify-self: left;
}

.nav > img {
    display: block;
    height: 50px;
    justify-self: right;
}

.nav > div > p {
    font-size: 1rem;
    font-weight: bold;
    margin: 0;
}

.nav > div > p + p {
    font-size: 1.7rem;
    font-weight: bolder;
}

.new,
.upload,
.share {
    font-size: 1rem;
    border: none;
    border-radius: 25px;
    background-color: rgb(153, 213, 241);
    padding: 10px 28px;
}

.content {
    display: grid;
    grid-template-columns: 3fr 1fr;
    grid-template-rows: repeat(auto-fit, minmax(min-content, 400px));
    gap: 15px;
    padding: 25px 15px 15px;
}

.projects {
    grid-area: 1 / 1 / 3 / 2;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-template-rows: 35px repeat(auto-fit, minmax(200px, 15%));
    gap: 15px;
}

.announcements {
    grid-area: 1 / 2 / 2 / 3;
    display: grid;
    grid-template-rows: 35px min-content;
}

.trending {
    grid-area: 2 / 2 / 3 / 3;
    align-self: top;
    display: grid;
    grid-template-rows: 35px min-content;
}

.projects > h2,
.announcements > h2,
.trending > h2 {
    grid-column: 1 / -1;
    align-self: end;
}

h2,
h3,
h4,
.project-card > p,
.announcement-card > p {
    margin: 0;
}

.project-card {
    display: grid;
    grid-template-rows: 1fr 3fr 1fr;
    padding: 15px;
    background-color: white;
    border-radius: 8px;
    border-left: 8px solid orange;
}

.project-card > h3 {
    align-self: end;
}

.project-card > div {
    justify-self: end;
    align-self: end;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
}

.announcement-cards {
    background-color: white;
    margin-top: 15px;
    padding: 10px 30px 0px 30px;
    background-color: white;
    border-radius: 8px;
}

.announcement-card {
    padding: 20px 0;
}

.announcement-card:nth-child(-n + 2) {
    border-bottom: 1px solid rgb(189, 189, 189);
}

.announcement-card > p {
    font-size: 0.8rem;
}

.trending-cards {
    display: grid;
    grid-template-rows: repeat(4, 60px);
    background-color: white;
    padding: 10px 20px 10px 20px;
    background-color: white;
    border-radius: 8px;
}

.trending-card {
    display: grid;
    grid-template-columns: 30px 1fr;
    grid-template-rows: 30px 30px;
    align-items: center;
}

.trending-card > img {
    grid-area: 1 / 1 / 3 / 2;
}

.trending-card > p {
    grid-area: 1 / 2 / 2 / 3;
    margin: 0;
    padding: 0;
    align-self: end;
}

.trending-card > p + p {
    grid-area: 2 / 2 / 3 / 3;
    align-self: start;
}
